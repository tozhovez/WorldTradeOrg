openapi: 3.0.1
info:
  title: Timeseries API
  description: WTO Data extraction API. You can use it to download in JSON or CSV format a larger data series or to integrate WTO Data into your web pages.<br/>Comma separated values are considered inclusive (logical OR).
  version: v1
servers:
  - url: http://api.wto.org/timeseries/v1
  - url: https://api.wto.org/timeseries/v1
paths:
  /topics:
    get:
      tags:
        - Reference
      summary: 05. Topics
      description: List of topics grouping indicators.
      operationId: get-topics
      parameters:
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of topics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /frequencies:
    get:
      tags:
        - Reference
      summary: 06. Frequencies
      description: 'List of frequencies, for instance annual or monthly.'
      operationId: get-frequencies
      parameters:
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of frequencies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FrequenciesGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /periods:
    get:
      tags:
        - Reference
      summary: 07. Periods
      description: 'List of time periods per frequencies, for instance January or Q1.'
      operationId: get-periods
      parameters:
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of periods
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodsGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /units:
    get:
      tags:
        - Reference
      summary: 08. Units
      description: 'Units of measurement in which datapoints are expressed, for instance USD. It includes the magnitude, such as millions.'
      operationId: get-units
      parameters:
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of units
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitsGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /indicator_categories:
    get:
      tags:
        - Reference
      summary: 09. Indicator categories
      description: Categories for grouping indicators. They can contain subcategories.
      operationId: get-indicator_categories
      parameters:
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of indicator categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Indicator_categoriesGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /indicators:
    get:
      tags:
        - Reference
      summary: 10. Indicators
      description: List of indicators.
      operationId: get-indicators
      parameters:
        - name: i
          in: query
          description: 'Indicator :<ul><li><i>all</i></li><li><i>Indicator Code</i> : Filter on one specific indicator</li></ul>'
          schema:
            type: string
            default: all
        - name: name
          in: query
          description: Indicator name (or part of the name)
          schema:
            type: string
        - name: t
          in: query
          description: Topics (comma separated ids). ```See Topics.```
          schema:
            type: string
            default: all
        - name: pc
          in: query
          description: 'Product Classifications :<ul><li><i>all</i> : all classifications</li><li><i>none</i> : no product dimension</li><li>comma separated codes : ```See Classifications.```</li></ul>'
          schema:
            type: string
            default: all
        - name: tp
          in: query
          description: Trade partner :<ul><li><i>yes</i></li><li><i>no</i></li><li><i>all</i></li></ul>
          schema:
            type: string
            default: all
        - name: frq
          in: query
          description: 'Frequency :<ul><li><i>A</i> : annualy</li><li><i>S</i> : semiannualy</li><li><i>Q</i> : quarterly</li><li><i>M</i> : monthly</li><li><i>all</i></li></ul>'
          schema:
            type: string
            default: all
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of indicators
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndicatorsGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /territory/regions:
    get:
      tags:
        - Reference
      summary: 11. Geographical regions
      description: Geographical regions.
      operationId: get-territory-regions
      parameters:
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of geographical regions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerritoryRegionsGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /territory/groups:
    get:
      tags:
        - Reference
      summary: 12. Economic groups
      description: Groups of territories that are not geographical.
      operationId: get-territory-groups
      parameters:
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of economic groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerritoryGroupsGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /reporters:
    get:
      tags:
        - Reference
      summary: 13. Reporting economies
      description: Territories reporting data.
      operationId: get-reporters
      parameters:
        - name: name
          in: query
          description: Reporter name (or part of name)
          schema:
            type: string
        - name: ig
          in: query
          description: Individual / Group economies :<ul><li><i>individual</i></li><li><i>group</i></li><li><i>all</i></li></ul>
          schema:
            type: string
            default: all
        - name: reg
          in: query
          description: Regions (comma separated codes). ```See Geographical regions.```
          schema:
            type: string
            default: all
        - name: gp
          in: query
          description: Groups (comma separated codes). ```See Economic groups.```
          schema:
            type: string
            default: all
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of reporting economies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportersGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /partners:
    get:
      tags:
        - Reference
      summary: 14. Partner economies
      description: Territories in the role of partners.
      operationId: get-partners
      parameters:
        - name: name
          in: query
          description: Reporter name (or part of name)
          schema:
            type: string
        - name: ig
          in: query
          description: Individual / Group economies :<ul><li><i>individual</i></li><li><i>group</i></li><li><i>all</i></li></ul>
          schema:
            type: string
            default: all
        - name: reg
          in: query
          description: Regions (comma separated codes). ```See Geographical regions.```
          schema:
            type: string
            default: all
        - name: gp
          in: query
          description: Groups (comma separated codes). ```See Economic groups.```
          schema:
            type: string
            default: all
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of partner economies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnersGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /product_classifications:
    get:
      tags:
        - Reference
      summary: 15. Classifications
      description: Classifications.
      operationId: get-product_classifications
      parameters:
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of product/sector classifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product_classificationsGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /products:
    get:
      tags:
        - Reference
      summary: 16. Products/sectors
      description: Indicators cover goods (products) and services (sectors).
      operationId: get-products
      parameters:
        - name: name
          in: query
          description: Product/sector name (or part of name)
          schema:
            type: string
        - name: pc
          in: query
          description: Product/sector Classifications (comma separated codes). ```See Classifications.```
          schema:
            type: string
            default: all
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of products/sectors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGet200ApplicationJsonResponse'
        '400':
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /years:
    get:
      tags:
        - Reference
      summary: 17. Years
      description: Years for which datapoints exist.
      operationId: get-years
      responses:
        '200':
          description: The list of years
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YearsGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /value_flags:
    get:
      tags:
        - Reference
      summary: 18. Value flags
      description: 'Value flags are predefined metadata for values, such as estimation.'
      operationId: get-value_flags
      parameters:
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of value flags
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Value_flagsGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetailsResult'
  /data:
    get:
      tags:
        - Data
      summary: 01. Timeseries datapoints
      description: 'Timeseries datapoints. If you reach the URL length limit, you can use the POST method.'
      operationId: get-data-i-i
      parameters:
        - name: i
          in: query
          description: Indicator code. ```See Indicators.```
          required: true
          schema:
            type: string
            default: TP_A_0010
        - name: r
          in: query
          description: Reporting economies (comma separated codes). ```See Reporting economies.```
          schema:
            type: string
            default: all
        - name: p
          in: query
          description: Partner economies where applicable (comma separated codes). ```See Partner economies.```
          schema:
            type: string
            default: default
        - name: ps
          in: query
          description: "Time period :<ul><li><i>default</i> : The last eight years are applied.\r\n            </li><li><i>all</i> : All years are applied.\r\n            </li><li>YYYY : comma separated list of years.\r\n            ```If the frequency of the requested indicator is monthly or quarterly, the resulting output will reflect this, e.g. 2010 will give an output of January-December or 2010Q1-Q4.```\r\n            </li><li>YYYYQn : comma separated list of year + quarter.\r\n            ```If the indicator frequency is monthly, the output will be given in months, e.g. 2010Q2 will produce an output of April, May, June.```\r\n            </li><li>YYYYMM : comma separated list of year + month.\r\n            ```e.g. 201007, 201507.```\r\n            </li><li>YYYY-YYYY : range of years.\r\n            ```e.g. 1995-2015.```\r\n            </li><li>YYYYQn-YYYYQn : range of quarters.\r\n            ```e.g. 2010Q1-2013Q3.```\r\n            </li><li>YYYYMM-YYYYMM : range of months.\r\n            ```e.g. 201501-201606.```\r\n            </li></ul>"
          schema:
            type: string
            default: default
        - name: pc
          in: query
          description: 'Products/sectors (comma separated codes) where applicable. ```See Products/sectors.```<ul><li><i>default</i> : includes all the product/sector codes <u>of the indicator''s classification</u> (except for <i>HS</i> : includes all the top level 2-digit products + the whole chapter 01)</li><li><i>all</i> : includes all the product/sector codes <u>of the indicator''s classification</u></li><li>HS2, HS4, HS6 : All HS codes at 2,4,6-digit level</li><li>AG,AGFOFI,MAIS,... : comma separated list of product codes</li></ul>'
          schema:
            type: string
            default: default
        - name: spc
          in: query
          description: 'Include sub products/sectors. If true, all child items in the product/sector hierarchy are recursively included.'
          schema:
            type: boolean
            default: false
        - name: fmt
          in: query
          description: 'Output format : <ul><li><i>json</i> : json content is streamed</li><li><i>csv</i> : csv file is compressed and zipped</li></ul>'
          schema:
            type: string
            default: json
        - name: mode
          in: query
          description: 'Output mode : <ul><li><i>full</i> : all columns, information repeated on each row</li><li><i>codes</i> : technical codes only</li></ul>'
          schema:
            type: string
            default: full
        - name: dec
          in: query
          description: 'Number of decimals : <ul><li><i>default</i> : applies the default number of decimals for the Indicator</li><li>N : sets the number of decimals to N</li></ul>'
          schema:
            type: string
            default: default
        - name: off
          in: query
          description: Number of records to skip (offset).<br />You can use it for implementing pagination.
          schema:
            type: integer
            default: 0
        - name: max
          in: query
          description: Maximum number of records to return (limited to 1 000 000).
          schema:
            type: integer
            default: 500
        - name: head
          in: query
          description: 'Heading style :<ul><li><i>H</i> : human readable headings, including special characters and spaces</li><li><i>M</i> : machine readable headings, easy to parse</li></ul>'
          schema:
            type: string
            default: H
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
        - name: meta
          in: query
          description: 'Include Metadata information. If enabled, it will generate additional files/arrays (depending on the format, see parameter fmt) :<ul><li>Metadata records</li><li>Request summary : number of data records retrieved, total number of data records, number of metadata records retrieved, start time, end time, duration in seconds</li></ul>'
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: The Json array or Zip file including data points. It also includes metadata and summary if parameter <i>Include Metadata</i> is set to true.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPointExtended'
            application/zip:
              schema:
                $ref: '#/components/schemas/DataPointExtended'
        '400':
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
    post:
      tags:
        - Data
      summary: 02. Timeseries datapoints
      description: Timeseries datapoints.
      operationId: post-data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataQuery'
          text/json:
            schema:
              $ref: '#/components/schemas/DataQuery'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataQuery'
      responses:
        '200':
          description: The Json array or Zip file including data/metadata/summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataPointExtended'
            application/zip:
              schema:
                $ref: '#/components/schemas/DataPointExtended'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
            application/zip:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
  /metadata:
    get:
      tags:
        - Data
      summary: 04. Timeseries metadata
      description: Timeseries metadata.
      operationId: get-metadata-i-i
      parameters:
        - name: i
          in: query
          description: Indicator code. ```See Indicators.```
          required: true
          schema:
            type: string
            default: TP_A_0010
        - name: r
          in: query
          description: Reporting economies (comma separated codes). ```See Reporting economies.```
          schema:
            type: string
            default: all
        - name: p
          in: query
          description: Partner economies where applicable (comma separated codes). ```See Partner economies.```
          schema:
            type: string
            default: all
        - name: pc
          in: query
          description: 'Products/sectors (comma separated codes) where applicable. ```See Products/sectors.```<ul><li><i>default</i> : includes all the product/sectors codes <u>of the indicator''s classification</u> (except for <i>HS</i> : Include all the top level 2 digit products + the whole chapter 01)</li><li><i>all</i> : includes all the product/sectors codes <u>of the indicator''s classification</u></li><li>HS2, HS4, HS6 : All HS codes at 2,4,6 digit-level</li><li>AG,AGFOFI,MAIS,... : comma separated list of product codes</li></ul>'
          schema:
            type: string
            default: all
        - name: spc
          in: query
          description: 'Include sub products/sectors. If true, all child items in the product/sector hierarchy are recursively included.'
          schema:
            type: boolean
            default: false
        - name: lang
          in: query
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: The list of metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataGet200ApplicationJsonResponse'
        '400':
          description: The validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
  /data_count:
    get:
      tags:
        - Data
      summary: 03. Timeseries data count
      description: Total number of data points.
      operationId: get-data_count-i-i
      parameters:
        - name: i
          in: query
          description: Indicator code. ```See Indicators.```
          required: true
          schema:
            type: string
            default: TP_A_0010
        - name: r
          in: query
          description: Reporting economies (comma separated codes). ```See Reporting economies.```
          schema:
            type: string
            default: all
        - name: p
          in: query
          description: Partner economies where applicable (comma separated codes). ```See Partner economies.```
          schema:
            type: string
            default: default
        - name: ps
          in: query
          description: "Time period :<ul><li><i>default</i> : The last eight years will be applied.\r\n            </li><li><i>all</i> : All years are applied.\r\n            </li><li>YYYY : comma separated list of years.\r\n            ```If the frequency of the requested indicator is monthly or quarterly, the resulting output will reflect this, e.g. 2010 will give an output of January-December or 2010Q1-Q4.```\r\n            </li><li>YYYYQn : comma separated list of year + quarter.\r\n            ```If the indicator frequency is monthly, the output will be given in months, e.g. 2010Q2 will produce an output of April, May, June.```\r\n            </li><li>YYYYMM : comma separated list of year + month.\r\n            ```e.g. 201007, 201507.```\r\n            </li><li>YYYY-YYYY : range of years.\r\n            ```e.g. 1995-2015.```\r\n            </li><li>YYYYQn-YYYYQn : range of quarters.\r\n            ```e.g. 2010Q1-2013Q3.```\r\n            </li><li>YYYYMM-YYYYMM : range of months.\r\n            ```e.g. 201501-201606.```\r\n            </li></ul>"
          schema:
            type: string
            default: default
        - name: pc
          in: query
          description: 'Products/sectors (comma separated codes) where applicable. ```See Products/sectors.```<ul><li><i>default</i> : includes all the product/sector codes <u>of the indicator''s classification</u> (except for <i>HS</i> : includes all the top level 2-digit products + the whole chapter 01)</li><li><i>all</i> : includes all the product/sector codes <u>of the indicator''s classification</u></li><li>HS2, HS4, HS6 : All HS codes at 2,4,6-digit level</li><li>AG,AGFOFI,MAIS,... : comma separated list of product codes</li></ul>'
          schema:
            type: string
            default: default
        - name: spc
          in: query
          description: Include sub products/sectors.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data_countGet200ApplicationJsonResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationProblemDetails'
components:
  schemas:
    DataPointExtended:
      type: object
      properties:
        indicatorCategoryCode:
          type: string
          description: The Indicator category code.
          nullable: true
        indicatorCategory:
          type: string
          description: The Indicator category.
          nullable: true
        indicatorCode:
          type: string
          description: The ApiTimeSeries.Models.Indicator code.
          nullable: true
        indicator:
          type: string
          description: The ApiTimeSeries.Models.DataPointExtended.Indicator name.
          nullable: true
        reportingEconomyCode:
          type: string
          description: The reporting ApiTimeSeries.Models.Territory code.
          nullable: true
        reportingEconomy:
          type: string
          description: The reporting ApiTimeSeries.Models.Territory name.
          nullable: true
        partnerEconomyCode:
          type: string
          description: The partner ApiTimeSeries.Models.Territory code.
          nullable: true
        partnerEconomy:
          type: string
          description: The partner ApiTimeSeries.Models.Territory name.
          nullable: true
        productOrSectorClassificationCode:
          type: string
          description: The ApiTimeSeries.Models.ProductClassification code.
          nullable: true
        productOrSectorClassification:
          type: string
          description: The ApiTimeSeries.Models.ProductClassification name.
          nullable: true
        productOrSectorCode:
          type: string
          description: The ApiTimeSeries.Models.Product code.
          nullable: true
        productOrSector:
          type: string
          description: The ApiTimeSeries.Models.Product name.
          nullable: true
        periodCode:
          type: string
          description: The ApiTimeSeries.Models.Period code.
          nullable: true
        period:
          type: string
          description: The ApiTimeSeries.Models.DataPointExtended.Period name.
          nullable: true
        frequencyCode:
          type: string
          description: The ApiTimeSeries.Models.Frequency code.
          nullable: true
        frequency:
          type: string
          description: The ApiTimeSeries.Models.DataPointExtended.Frequency name.
          nullable: true
        unitCode:
          type: string
          description: The ApiTimeSeries.Models.Unit code.
          nullable: true
        unit:
          type: string
          description: The ApiTimeSeries.Models.DataPointExtended.Unit name.
          nullable: true
        year:
          type: integer
          description: The year
          format: int32
          nullable: true
        valueFlagCode:
          type: string
          description: The ApiTimeSeries.Models.ValueFlag code.
          nullable: true
        valueFlag:
          type: string
          description: The ApiTimeSeries.Models.DataPointExtended.ValueFlag description.
          nullable: true
        textValue:
          type: string
          description: The text value.
          nullable: true
        value:
          type: number
          description: The value.
          format: double
          nullable: true
      additionalProperties: false
      description: Datapoint extended model.
    ValidationProblemDetails:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          nullable: true
          readOnly: true
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
        extensions:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
          readOnly: true
      additionalProperties: false
    DataQuery:
      required:
        - i
      type: object
      properties:
        i:
          type: string
          description: Indicator code. ```See Indicators.```
          nullable: true
        r:
          pattern: '^(all|[A-Za-z0-9]{3}(,[A-Za-z0-9]{3})*)$'
          type: string
          description: Reporting economies (comma separated codes). ```See Reporting economies.```
          nullable: true
        p:
          pattern: '^(all|default|[A-Za-z0-9]{3}(,[A-Za-z0-9]{3})*)$'
          type: string
          description: Partner economies where applicable (comma separated codes). ```See Partner economies.```
          nullable: true
        ps:
          pattern: '^(default|all|(19|20)\d{2}(,(19|20)\d{2})*|(19|20)[0-4]\d(S[1-2])(,(19|20)[0-4]\d(S[1-2]))*|(19|20)[0-4]\d(Q[1-4])(,(19|20)[0-4]\d(Q[1-4]))*|(19|20)[0-4]\d(0[1-9]|1[0-2])(,(19|20)[0-4]\d(0[1-9]|1[0-2]))*|(19|20)\d{2}-(19|20)\d{2}|(19|20)[0-4]\d(S[1-2])-(19|20)[0-4]\d(S[1-2])|(19|20)[0-4]\d(Q[1-4])-(19|20)[0-4]\d(Q[1-4])|(19|20)[0-4]\d(0[1-9]|1[0-2])-(19|20)[0-4]\d(0[1-9]|1[0-2]))$'
          type: string
          description: "Time period :<ul><li><i>default</i> : The last eight years are applied.\r\n</li><li><i>all</i> : All years are applied.\r\n</li><li>YYYY : comma separated list of years.\r\n```If the frequency of the requested indicator is monthly or quarterly, the resulting output will reflect this, e.g. 2010 will give an output of January-December or 2010Q1-Q4.```\r\n</li><li>YYYYQn : comma separated list of year + quarter.\r\n```If the indicator frequency is monthly, the output will be given in months, e.g. 2010Q2 will produce an output of April, May, June.```\r\n</li><li>YYYYMM : comma separated list of year + month.\r\n```e.g. 201007, 201507.```\r\n</li><li>YYYY-YYYY : range of years.\r\n```e.g. 1995-2015.```\r\n</li><li>YYYYQn-YYYYQn : range of quarters.\r\n```e.g. 2010Q1-2013Q3.```\r\n</li><li>YYYYMM-YYYYMM : range of months.\r\n```e.g. 201501-201606.```\r\n</li></ul>"
          nullable: true
        pc:
          pattern: '^(HS2|HS4|HS6|default|all|[A-Za-z0-9]*(,[A-Za-z0-9]*)*)$'
          type: string
          description: 'Products/sectors (comma separated codes) where applicable. ```See Products/sectors.```<ul><li><i>default</i> : includes all the product/sector codes <u>of the indicator''s classification</u> (except for <i>HS</i> : includes all the top level 2-digit products + the whole chapter 01)</li><li><i>all</i> : includes all the product/sector codes <u>of the indicator''s classification</u></li><li>HS2, HS4, HS6 : All HS codes at 2,4,6-digit level</li><li>AG,AGFOFI,MAIS,... : comma separated list of product codes</li></ul>'
          nullable: true
        spc:
          type: boolean
          description: 'Include sub products/sectors. If true, all child items in the product/sector hierarchy are recursively included.'
        fmt:
          type: string
          description: 'Output format : <ul><li><i>json</i> : json content is streamed</li><li><i>csv</i> : csv file is compressed and zipped</li></ul>'
          nullable: true
        mode:
          minLength: 1
          type: string
          description: 'Output mode : <ul><li><i>full</i> : all columns, information repeated on each row</li><li><i>codes</i> : technical codes only</li></ul>'
          nullable: true
        dec:
          pattern: '^(default|[0-9]*)$'
          type: string
          description: 'Number of decimals : <ul><li><i>default</i> : apply the default number of decimals for the Indicator</li><li>N : sets the number of decimals to N</li></ul>'
          nullable: true
        off:
          maximum: 1000000
          minimum: 0
          type: integer
          description: "Number of records to skip (offset).\r\nYou can use it for implementing pagination."
          format: int32
          nullable: true
        max:
          maximum: 1000000
          minimum: 1
          type: integer
          description: Maximum number of records to return.
          format: int32
          nullable: true
        head:
          type: string
          description: 'Heading style :<ul><li><i>H</i> : human readable headings, including special characters and spaces</li><li><i>M</i> : machine readable headings, easy to parse</li></ul>'
          nullable: true
        lang:
          type: integer
          description: 'Language id :<ul><li><i>1</i> : English</li><li><i>2</i> : French</li><li><i>3</i> : Spanish</li></ul>'
          format: int32
          nullable: true
        meta:
          type: boolean
          description: 'Include Metadata information. If enabled, it will generate additional files/arrays (depending on the format, see parameter fmt) :<ul><li>Metadata records</li><li>Request summary : number of data records retrieved, total number of data records, number of metadata records retrieved, start time, end time, duration in seconds</li></ul>'
      additionalProperties: false
      description: 'The Data Query model, used for POST requests'
    Metadata:
      type: object
      properties:
        metadataCategoryCode:
          type: string
          description: The ApiTimeSeries.Models.Metadata category code.
          nullable: true
        indicatorCategoryCode:
          type: string
          description: The ApiTimeSeries.Models.Indicator category code.
          nullable: true
        indicatorCode:
          type: string
          description: The ApiTimeSeries.Models.Indicator code.
          nullable: true
        reportingEconomyCode:
          type: string
          description: The reporting ApiTimeSeries.Models.Territory code.
          nullable: true
        partnerEconomyCode:
          type: string
          description: The partner ApiTimeSeries.Models.Territory code.
          nullable: true
        productOrSectorClassificationCode:
          type: string
          description: The ApiTimeSeries.Models.ProductClassification code.
          nullable: true
        productOrSectorCode:
          type: string
          description: The ApiTimeSeries.Models.Product code.
          nullable: true
        periodCode:
          type: string
          description: The ApiTimeSeries.Models.Period code.
          nullable: true
        frequencyCode:
          type: string
          description: The ApiTimeSeries.Models.Frequency code.
          nullable: true
        unitCode:
          type: string
          description: The ApiTimeSeries.Models.Unit code.
          nullable: true
        value:
          type: number
          description: The value.
          format: double
          nullable: true
      additionalProperties: false
      description: Metadata model.
    Topic:
      type: object
      properties:
        id:
          type: integer
          description: The id.
          format: int32
        name:
          type: string
          description: The name.
          nullable: true
        sortOrder:
          type: integer
          description: The sort order.
          format: int32
      additionalProperties: false
      description: Indicator Topic model.
    ValidationProblemDetailsResult:
      type: object
      properties:
        title:
          type: string
          description: "A short, human-readable summary of the problem type.It SHOULD NOT change from\r\n            occurrence to occurrence of the problem, except for purposes of localization(e.g.,\r\n            using proactive content negotiation; see[RFC7231], Section 3.4)."
          nullable: true
        status:
          type: integer
          description: 'The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.'
          format: int32
          nullable: true
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Gets the validation errors associated with this instance of Microsoft.AspNetCore.Mvc.ValidationProblemDetails.
          nullable: true
          readOnly: true
      additionalProperties: false
      description: Class inspired from Microsoft.AspNetCore.Mvc.ValidationProblemDetails to display only the returned fields in the result
    Frequency:
      type: object
      properties:
        code:
          type: string
          description: The code.
          nullable: true
        name:
          type: string
          description: The name.
          nullable: true
      additionalProperties: false
      description: Indicator Frequency model.
    Period:
      type: object
      properties:
        code:
          type: string
          description: The code.
          nullable: true
        name:
          type: string
          description: The name.
          nullable: true
        description:
          type: string
          description: The description.
          nullable: true
        frequencyCode:
          type: string
          description: The ApiTimeSeries.Models.Frequency code.
          nullable: true
        displayOrder:
          type: integer
          description: The display order.
          format: int32
      additionalProperties: false
      description: Period model.
    Unit:
      type: object
      properties:
        code:
          type: string
          description: The code.
          nullable: true
        name:
          type: string
          description: The name.
          nullable: true
      additionalProperties: false
      description: Unit model.
    IndicatorCategory:
      type: object
      properties:
        code:
          type: string
          description: The code.
          nullable: true
        name:
          type: string
          description: The name.
          nullable: true
        parentCode:
          type: string
          description: The parent ApiTimeSeries.Models.IndicatorCategory code.
          nullable: true
        sortOrder:
          type: integer
          description: The sort order.
          format: int32
      additionalProperties: false
      description: Indicator Category model.
    Indicator:
      type: object
      properties:
        code:
          type: string
          description: The code.
          nullable: true
        name:
          type: string
          description: The name.
          nullable: true
        categoryCode:
          type: string
          description: The category.
          nullable: true
        categoryLabel:
          type: string
          description: The category label.
          nullable: true
        subcategoryCode:
          type: string
          description: The subcategory.
          nullable: true
        subcategoryLabel:
          type: string
          description: The subcategory label.
          nullable: true
        unitCode:
          type: string
          description: The unit.
          nullable: true
        unitLabel:
          type: string
          description: The unit label.
          nullable: true
        startYear:
          type: integer
          description: The start year.
          format: int32
        endYear:
          type: integer
          description: The end year.
          format: int32
        frequencyCode:
          type: string
          description: The frequency.
          nullable: true
        frequencyLabel:
          type: string
          description: The frequency label.
          nullable: true
        numberReporters:
          type: integer
          description: The number of ApiTimeSeries.Models.Territory reporters.
          format: int32
        numberPartners:
          type: integer
          description: The number of ApiTimeSeries.Models.Territory partners.
          format: int32
          nullable: true
        productSectorClassificationCode:
          type: string
          description: The ApiTimeSeries.Models.ProductClassification code.
          nullable: true
        productSectorClassificationLabel:
          type: string
          description: The ApiTimeSeries.Models.ProductClassification label.
          nullable: true
        hasMetadata:
          type: string
          description: Has metadata.
          nullable: true
        numberDecimals:
          type: integer
          description: The number of decimals.
          format: int32
        numberDatapoints:
          type: integer
          description: The number of data points.
          format: int32
        updateFrequency:
          type: string
          description: The update frequency.
          nullable: true
        description:
          type: string
          description: The description.
          nullable: true
        sortOrder:
          type: integer
          description: The sort order.
          format: int32
      additionalProperties: false
      description: Indicator Model.
    TerritoryGroup:
      type: object
      properties:
        code:
          type: string
          description: The code.
          nullable: true
        name:
          type: string
          description: The name.
          nullable: true
        displayOrder:
          type: integer
          description: The display order.
          format: int32
      additionalProperties: false
      description: Territory region or group model.
    Territory:
      type: object
      properties:
        code:
          type: string
          description: The code.
          nullable: true
        iso3A:
          type: string
          description: The Iso3A code.
          nullable: true
        name:
          type: string
          description: The name.
          nullable: true
        displayOrder:
          type: integer
          description: The display order.
          format: int32
      additionalProperties: false
      description: Reporter/Partner Economy model.
    ProductClassification:
      type: object
      properties:
        code:
          type: string
          description: The code.
          nullable: true
        name:
          type: string
          description: The name.
          nullable: true
      additionalProperties: false
      description: Product Classification model.
    Product:
      type: object
      properties:
        code:
          type: string
          description: The code.
          nullable: true
        name:
          type: string
          description: The name.
          nullable: true
        note:
          type: string
          description: The note.
          nullable: true
        productClassification:
          type: string
          description: The ApiTimeSeries.Models.Product.ProductClassification code.
          nullable: true
        codeUnique:
          type: string
          description: The unique code. Contains ApiTimeSeries.Models.Product.ProductClassification + ApiTimeSeries.Models.Product.Code
          nullable: true
        displayOrder:
          type: integer
          description: The display order.
          format: int32
          nullable: true
        hierarchy:
          type: string
          description: The hierarchy.
          nullable: true
      additionalProperties: false
      description: Product model.
    Years:
      type: object
      properties:
        year:
          type: integer
          description: The year.
          format: int32
      additionalProperties: false
      description: Year model.
    ValueFlag:
      type: object
      properties:
        code:
          type: string
          description: The code.
          nullable: true
        description:
          type: string
          description: The description.
          nullable: true
      additionalProperties: false
      description: Value flag model.
    Data_countGet200ApplicationJsonResponse:
      type: integer
      format: int32
    MetadataGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/Metadata'
    TopicsGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/Topic'
    FrequenciesGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/Frequency'
    PeriodsGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/Period'
    UnitsGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/Unit'
    Indicator_categoriesGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/IndicatorCategory'
    IndicatorsGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/Indicator'
    TerritoryRegionsGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/TerritoryGroup'
    TerritoryGroupsGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/TerritoryGroup'
    ReportersGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/Territory'
    PartnersGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/Territory'
    Product_classificationsGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/ProductClassification'
    ProductsGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    YearsGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/Years'
    Value_flagsGet200ApplicationJsonResponse:
      type: array
      items:
        $ref: '#/components/schemas/ValueFlag'
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]